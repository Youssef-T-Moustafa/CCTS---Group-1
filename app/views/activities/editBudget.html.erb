<% content_for :javascript do %>
<script>
 async function updateBudget(activityId, status) {
  const token = document.getElementsByName('csrf-token')[0].content;

  try {
    const response = await fetch(`/activities/${activityId}.json?activity[status]=${status}&activity[update_type]=status`, {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/x-www-form-urlencoded',
        'X-CSRF-Token': token
      }
    });

    if (response.ok) {
      const data = await response.json();
      handleUpdateResponse(data, activityId);
    } else {
      const errorData = await response.json();
      console.error('Error updating budget:', errorData);
      alert('Error updating budget. Please check the console for details.');
    }
  } catch (error) {
    console.error('Exception:', error);
    alert('Error updating budget. Please check the console for details.');
  }
}

function handleUpdateResponse(data, activityId) {
  console.log('Update response data:', data);
  console.log('Activity ID:', activityId);

  const statusColumn = document.getElementById(`status-${activityId}`);
  if (statusColumn) {
    statusColumn.innerHTML = data.status.charAt(0).toUpperCase() + data.status.slice(1).toLowerCase();

    // Fetch the available budget cell and update its content
    const availableBudgetCell = document.getElementById(`available-budget-${activityId}`);
    if (availableBudgetCell) {
      availableBudgetCell.innerHTML = data.available_budget;
    }

    if (data.status === 'Rejected') {
      alert('Budget Rejected');
    } else if (data.status === 'Approved') {
      alert('Budget Approved');
    } else {
      alert('Unexpected response. Please check the console for details.');
    }
  } else {
    console.error('Status column not found for activity ID:', activityId);
    alert('Error updating budget. Please check the console for details.');
  }
}

function handleUpdateResponse(data, activityId) {
  console.log('Update response data:', data);
  console.log('Activity ID:', activityId);

  const statusColumn = document.getElementById(`status-${activityId}`);
  if (statusColumn) {
    statusColumn.innerHTML = data.status.charAt(0).toUpperCase() + data.status.slice(1).toLowerCase();

    // Fetch the available budget cell and update its content
    const availableBudgetCell = document.getElementById(`available-budget-${activityId}`);
    if (availableBudgetCell) {
      // Log the available_budget value to ensure it's not undefined
      console.log('Available Budget:', data.available_budget);

      // Update the available budget cell directly
      availableBudgetCell.innerHTML = data.available_budget;

      if (data.status === 'Rejected') {
        alert('Budget Rejected');
      } else if (data.status === 'Approved') {
        alert('Budget Approved');
      } else {
        alert('Unexpected response. Please check the console for details.');
      }
    } else {
      console.error('Available budget cell not found for activity ID:', activityId);
      alert('Error updating budget. Please check the console for details.');
    }
  } else {
    console.error('Status column not found for activity ID:', activityId);
    alert('Error updating budget. Please check the console for details.');
  }
}


</script>
<% end %>

<% @activities.group_by { |activity| activity.club.category }.each do |category, category_activities| %>
  <h1><%= category %> Category Activities</h1>
  <table class="table table-striped">
      <tr>
        <th>Activity Id</th>
        <th>Activity Title</th>
        <th>Requested budget(RM)</th>
        <th>Available Budget(RM)</th>
        <th>Status</th>
        <th>Action</th>
      </tr>
    <tbody>
      <% category_activities.each do |activity| %>
        <tr>
          <td><%= activity.id %></td>
          <td><%= activity.activity_title %></td>
          <td><%= activity.requested_budget %></td>
          <td id="available-budget-<%= activity.id %>"><%= activity.club.budget %></td>
          <td id="status-<%= activity.id %>"><%= activity.status %></td>
          <td>
            <% unless activity.status.in?(['approved', 'rejected']) %>
              <!-- Only show the buttons if the budget is neither approved nor rejected -->
              <button class="btn btn-success" onclick="updateBudget(<%= activity.id %>, 'approved')">Approve Budget</button>
              <button class="btn btn-danger" onclick="updateBudget(<%= activity.id %>, 'rejected')">Reject Budget</button>
            <% end %>
          </td>
        </tr>
      <% end %>
    </tbody>
  </table>
<% end %>

<%= link_to 'Back to Finance', finance_clubs_path, class: 'btn btn-primary mb-3 col-12' %>
